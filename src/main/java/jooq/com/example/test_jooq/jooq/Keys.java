/*
 * This file is generated by jOOQ.
 */
package com.example.test_jooq.jooq;


import com.example.test_jooq.jooq.tables.Author;
import com.example.test_jooq.jooq.tables.Book;
import com.example.test_jooq.jooq.tables.FlywaySchemaHistory;
import com.example.test_jooq.jooq.tables.records.AuthorRecord;
import com.example.test_jooq.jooq.tables.records.BookRecord;
import com.example.test_jooq.jooq.tables.records.FlywaySchemaHistoryRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> PK_AUTHOR = Internal.createUniqueKey(Author.AUTHOR, DSL.name("pk_author"), new TableField[] { Author.AUTHOR.ID }, true);
    public static final UniqueKey<BookRecord> PK_BOOK = Internal.createUniqueKey(Book.BOOK, DSL.name("pk_book"), new TableField[] { Book.BOOK.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BookRecord, AuthorRecord> BOOK__FK_BOOK_AUTHOR_ID = Internal.createForeignKey(Book.BOOK, DSL.name("fk_book_author_id"), new TableField[] { Book.BOOK.AUTHOR_ID }, Keys.PK_AUTHOR, new TableField[] { Author.AUTHOR.ID }, true);
}
